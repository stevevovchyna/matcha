<%include partials/header%>
<div class="modal fade" id="myModal" role="dialog">
	<div class="modal-dialog modal-sm">
		<div class="modal-content">
			<div class="modal-body">
				<p></p>
			</div>
			<div class="modal-footer">
				<button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
			</div>
		</div>
	</div>
</div>
<%
	var userno = 0;
	if (currentUser._id.toString() === conversation.participants[0]._id.toString()) { userno = 1; }
%>
<div class="container">
	<h3>Conversation with <a
			href="/profile/<%=conversation.participants[userno]._id%>"><%=conversation.participants[userno].username%></a>
		<small><span class="label" id="online-<%=conversation.participants[userno]._id%>"></span></small></h3>
	<script>
		eventSocket.on('broadcast', (data) => {
			var online = document.getElementById("online-<%=conversation.participants[userno]._id%>");
			var curUserId = "<%=conversation.participants[userno]._id%>";
			var newArr = data.onlineUsers.filter(user => user._id.toString() === curUserId.toString());
			if (newArr.length > 0) {
				online.innerText = "Online";
				online.classList.remove('label-default');
				online.classList.add("label-success");
			} else {
				if (data.leftUser) {
					var lastseentime = "Last seen: " + moment(data.leftUser.lastseen).fromNow();
				} else {
					var lastseentime =
						"Last seen: <%= moment(conversation.participants[userno].lastseen).fromNow() %>";
				}
				online.innerText = lastseentime;
				online.classList.remove("label-success");
				online.classList.add("label-default");
			}
		});
	</script>
	<div id="messages" class="list-group scrollable-messages">
		<% var newMessageClass = ""; 
		messages.forEach(message => {
				if (!message.isRead) {
					if (message.sentBy._id.toString() !== currentUser._id.toString()) {
						newMessageClass = "myNewMessage";
					} else {
						newMessageClass = "newMessage";
					}
				}%>

		<%var padding = ""; if(message.sentBy._id.toString() !== currentUser._id.toString()){ padding = "padding-left:4%;" } %>
		<a class="list-group-item <%=newMessageClass%>" style="<%= padding %>">
			<h4 class="list-group-item-heading">
				<%=message.sentBy.username%><% if(message.sentBy._id.toString() === currentUser._id.toString()) { %>
				<small>(me)</small><%}%></h4>
				<small class="pull-right"><%=moment(message.createdAt).fromNow()%></small>
				<p class=" list-group-item-text"><%=message.body%></p>
		</a>
		<%})%>
	</div>
	<form id="form">
		<div class="input-group">
			<input id="message" class="form-control" placeholder="Type your message here..." />
			<span class="input-group-btn">
				<button class="send_message btn btn-default">Send</button>
			</span>
		</div>
	</form>
</div>
<script src="https://cdn.jsdelivr.net/gh/rexeze/formatTimeStamp/src/index-cdn.js"></script>

<script>
	var socket = io('/chat');
	var room = "<%=conversation._id%>";
	var messages = document.getElementById("messages");
	messages.scrollTo(0, 1000000000);

	socket.on('connect', () => {
		// Connected, let's sign-up for to receive messages for this room
		socket.emit('connectToRoom', room);
	});

	(() => {
		setTimeout(() => {
			$(".myNewMessage").removeClass("myNewMessage")
		}, 3000);
		$("form").submit(e => {
			e.preventDefault(); // prevents page reloading
			if ($("#message").val() !== "") {
				socket.emit("chat message", room, {
					message: $("#message").val(),
					authorName: "<%=currentUser.username%>",
					authorId: "<%=currentUser._id%>",
					recipientID: "<%=conversation.participants[userno]._id%>"
				}, (ret) => {
					if (ret.isBlocked) {
						$('div.modal-body > p').text(
							'You can not send a message to this user as he had blocked you!');
						$('#myModal').modal('show');
					} else if (ret.error) {
						$('div.modal-body > p').text(ret.message);
						$('#myModal').modal('show');
					} else {
						var a = document.createElement("a");
						a.setAttribute('class', 'list-group-item newMessage');
						a.innerHTML =
							'<h4 class="list-group-item-heading"><%=currentUser.username%> <small>(me)</small></h4><small class="pull-right">a moment ago</small><p class="list-group-item-text"></p>';
						a.children[2].innerText = ret.usermessage;
						messages.appendChild(a);
						messages.scrollTo(0, 100000000);
						$("#message").val("");
						if (ret.onlineToggle) {
							setTimeout(() => {
								$(".newMessage").toggleClass("newMessage");
							}, 2000);
						}
					}
				});
			} else {
				return false;
			}
			return false;
		});
		socket.on("received", data => {
			var a = document.createElement("a");
			var messages = document.getElementById("messages");
			a.setAttribute('class', 'list-group-item newMessage');
			a.setAttribute('style', 'padding-left:4%');
			a.innerHTML = '<h4 class="list-group-item-heading">' + data.user +
				'</h4><small class="pull-right">a moment ago</small><p class="list-group-item-text"></p>';
			a.children[2].innerText = data.message;
			messages.appendChild(a);
			messages.scrollTo(0, 100000000);
			setTimeout(() => {
				$(".newMessage").toggleClass("newMessage");
			}, 2000);
		});
		socket.on("read", data => {
			setTimeout(() => {
				$(".newMessage").removeClass("newMessage");
			}, 2000);
		});
	})();
</script>
<%include partials/footer%>
