<!doctype html>
<html lang="en">

<head>
	<!-- Required meta tags -->
	<meta charset="utf-8">
	<meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">

	<!-- Google Font -->

	<!-- Bootstrap CSS -->
	<script src="https://code.jquery.com/jquery-3.4.1.js"
		integrity="sha256-WpOohJOqMqqyKL9FccASB9O0KwACQJpFTUBLTYOVvVU=" crossorigin="anonymous"></script>
		<!-- <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css"
			integrity="sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u" crossorigin="anonymous"> -->

	<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"
		integrity="sha384-Tc5IQib027qvyjSMfHjOMaLkfuWVxZxUPnCJA7l2mCWNIpG9mGCD8wGNIcPD7Txa" crossorigin="anonymous">
	</script>
	<link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.8.1/css/all.css"
		integrity="sha384-50oBUHEmvpQ+1lW4y57PTFmhCaXp0ML5d60M1M7uH2+nqUivzIebhndOJK28anvf" crossorigin="anonymous">
	<!-- jquery stuff -->
	<link rel="stylesheet" href="//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
	<script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
	<!-- socket -->
	<script src="/socket.io/socket.io.js"></script>
	<!-- Custom CSS -->
	<link rel="stylesheet" href="/app.css">
	<link rel="stylesheet" href="/bootstrap.css">
	<script type="text/javascript" src="/app.js"></script>
	<script type="text/javascript" src="/moment.js"></script>

	<title>Matcha</title>
	<%if (currentUser) {%>
	<script type="text/javascript">
		var mySocketId = "<%=currentUser._id%>";
		var eventSocket = io('/events');
		eventSocket.on('broadcast', (data) => {
			console.log(data);
		});
		eventSocket.on('connect', () => {
			// Connected, let's sign-up for to receive messages for this room
			eventSocket.emit('connectToRoom', mySocketId);
		});
	</script>
	<%}%>
</head>

<body>
	<nav class="navbar navbar-default navbar-fixed-top" style="margin-bottom: 2rem">
		<div class="container-fluid">
			<!-- Brand and toggle get grouped for better mobile display -->
			<div class="navbar-header">
				<button type="button" class="navbar-toggle collapsed" data-toggle="collapse"
					data-target="#bs-example-navbar-collapse-1" aria-expanded="false">
					<span class="sr-only">Toggle navigation</span>
					<span class="icon-bar"></span>
					<span class="icon-bar"></span>
					<span class="icon-bar"></span>
				</button>
			</div>
			<!-- Collect the nav links, forms, and other content for toggling -->
			<div class="collapse navbar-collapse" id="bs-example-navbar-collapse-1">
				<ul class="nav navbar-nav">
					<% if (currentUser) { %>
	<li class="dropdown">
		<a href="#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true"
			aria-expanded="false">Feed<span class="caret"></span></a>
		<ul class="dropdown-menu">
			<li><a href="/feed/browse">Browse</a></li>
			<li><a href="/feed/research">Research</a></li>
		</ul>
	</li>
	<li class="dropdown">
		<a href="#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true"
			aria-expanded="false">Profile<span class="caret"></span></a>
		<ul class="dropdown-menu">
			<li><a href="/profile/<%= currentUser._id %>">My Profile</a></li>
			<li><a href="/profile/<%= currentUser._id %>/edit">Edit Profile</a></li>
			<li><a href="/likes/<%= currentUser._id %>/activity">Activity</a></li>
		</ul>
	</li>
	<li><a href="/conversations">Conversations</a></li>
	<% } %>
	</ul>
	<ul class="nav navbar-nav navbar-right">
		<%if (!currentUser) { %>
		<li><a href="/login">Log in</a></li>
		<li><a href="/register">Sign Up</a></li>
		<%} else { %>

		<li class="dropdown">
			<a href="#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true"
				aria-expanded="false">Notifications <span id="notifications-badge" class="badge">0</span></a>
			<ul class="dropdown-menu scrollable-menu" id="notifications-button" role="menu">
				<li id="check-all" class="position-sticky" onclick="checkAllNotifications('<%=currentUser._id%>')"><a
						href="#">Check all notifications at once</a></li>
			</ul>
		</li>
		<li><a>wazzup, <%=currentUser.username%>?</a></li>
		<li><a href="/logout">Logout</a></li>
		<%}%>
					<%if (currentUser) {%>
		<script>
			(() => {
				var currUser = "<%currentUser._id.toString()%>";
				var notificationsBadge = document.getElementById('notifications-badge');
				var notificationsButton = document.getElementById('notifications-button');
				var counter = Array.from(notificationsButton.children).filter(notificacion => notificacion.className ==
					'btn-info').length;
				notificationsBadge.innerText = counter;

				eventSocket.on('new notification', newNotification => {
					var newNotificationElement = document.createElement('li');
					if (newNotification.conversationID)
						var conversationID = newNotification.conversationID;
					else
						var conversationID = "";
					newNotificationElement.setAttribute('class', 'btn-info');
					newNotificationElement.setAttribute('onclick', 'checkNotification("' + newNotification
						.notificationID + '", "' + conversationID + '")');
					switch (newNotification.n_type) {
						case 'visit':
							newNotificationElement.innerHTML = "<a href=\"#\">" + newNotification
								.foundVisitorUsername + " checked your profile!</a>";
							break;
						case 'like':
							newNotificationElement.innerHTML = "<a href=\"#\">" + newNotification
								.foundVisitorUsername + " liked your profile!</a>";
							break;
						case 'message':
							newNotificationElement.innerHTML = "<a href=\"#\">" + newNotification
								.foundVisitorUsername + " sent you a new message</a>";
							break;
						case 'mutual_like':
							newNotificationElement.innerHTML = "<a href=\"#\">" + newNotification
								.foundVisitorUsername + " liked you back!</a>";
							break;
						case 'mutual_dislike':
							newNotificationElement.innerHTML = "<a href=\"#\">" + newNotification
								.foundVisitorUsername + " have disconnected from your profile!</a>"
							break;
						default:
							newNotificationElement.innerHTML = "<a>You have no notifications as for now</a>";
					}
					document.getElementById('check-all').insertAdjacentElement('afterend', newNotificationElement);
					var counter = Array.from(notificationsButton.children).filter(notificacion => notificacion
						.className == 'btn-info').length;
					notificationsBadge.innerText = counter;
				});

				xmlhttp = new XMLHttpRequest();
				xmlhttp.open("GET", "http://localhost:3000/notifications/<%=currentUser._id%>/?_method=GET", true);
				xmlhttp.onreadystatechange = () => {
					if (xmlhttp.readyState == 4 && xmlhttp.status == 200) {
						var resp = JSON.parse(xmlhttp.responseText);
						if (resp.status === 'success') {
							resp.foundNotifications = resp.foundNotifications.reverse();
							for (let newNotification of resp.foundNotifications) {
								var newNotificationElement = document.createElement('li');
								if (newNotification.conversationID)
									var conversationID = newNotification.conversationID;
								else
									var conversationID = "";
								if (!newNotification.isChecked) {
									newNotificationElement.setAttribute('class', 'btn-info');
									newNotificationElement.setAttribute('onclick', 'checkNotification("' +
										newNotification._id + '", "' + conversationID + '")');
								}
								switch (newNotification.n_type) {
									case 'visit':
										newNotificationElement.innerHTML = "<a href=\"#\">" + newNotification.from_whom
											.username + " checked your profile!</a>";
										break;
									case 'like':
										newNotificationElement.innerHTML = "<a href=\"#\">" + newNotification.from_whom
											.username + " liked your profile!</a>";
										break;
									case 'message':
										newNotificationElement.innerHTML = "<a href=\"#\">" + newNotification.from_whom
											.username + " sent you a new message</a>";
										break;
									case 'mutual_like':
										newNotificationElement.innerHTML = "<a href=\"#\">" + newNotification.from_whom
											.username + " liked you back!</a>";
										break;
									case 'mutual_dislike':
										newNotificationElement.innerHTML = "<a href=\"#\">" + newNotification.from_whom
											.username + " have disconnected from your profile!</a>";
										break;
									default:
										newNotificationElement.innerHTML = "<a>You have no notifications as for now</a>";
								}
								document.getElementById('check-all').insertAdjacentElement('afterend',
									newNotificationElement);
							}
							var counter = Array.from(notificationsButton.children).filter(notificacion => notificacion
								.className == 'btn-info').length;
							notificationsBadge.innerText = counter;
						} else {
							var newNotificationElement = document.createElement('li');
							newNotificationElement.innerText = "There are no notifications at the moment";
							document.getElementById('check-all').insertAdjacentElement('afterend',
								newNotificationElement);
						}
					}
				}
				xmlhttp.send("<%=currentUser._id%>");
			})();

			function checkNotification(notificationID, conversationID) {
				xmlhttp = new XMLHttpRequest();
				xmlhttp.open("POST", "http://localhost:3000/notifications/" + notificationID + "/check?_method=PUT", true);
				xmlhttp.onreadystatechange = () => {
					if (xmlhttp.readyState == 4 && xmlhttp.status == 200) {
						var resp = JSON.parse(xmlhttp.responseText);
						if (resp.status === 'success') {
							switch (resp.updatedNotification.n_type) {
								case 'visit':
									window.location.href = '/profile/' + resp.updatedNotification.from_whom;
									break;
								case 'message':
									window.location.href = '/conversations/' + resp.updatedNotification.conversationID;
									break;
								case 'like':
									window.location.href = '/profile/' + resp.updatedNotification.from_whom;
									break;
								case 'mutual_like':
									window.location.href = '/profile/' + resp.updatedNotification.from_whom;
									break;
								case 'mutual_dislike':
									window.location.href = '/profile/' + resp.updatedNotification.from_whom;
									break;
								default:
									document.getElementById('flash').innerHTML =
										'<div class="alert alert-danger alert-dismissible">There was an error manipulating your notification. Please try again</div>';
									break;
							}
						} else if (resp.status === 'error') {
							document.getElementById('flash').innerHTML =
								'<div class="alert alert-danger alert-dismissible">There was an error manipulating your notification. Please try again</div>'
						}
					}
				}
				xmlhttp.send(notificationID);
			}

			function checkAllNotifications(userID) {
				var notificationsBadge = document.getElementById('notifications-badge');
				var notificationsButton = document.getElementById('notifications-button');
				var flash = document.getElementById('flash');
				xmlhttp = new XMLHttpRequest();
				xmlhttp.open("POST", "http://localhost:3000/notifications/" + userID + "/checkall?_method=PUT", true);
				xmlhttp.onreadystatechange = () => {
					if (xmlhttp.readyState == 4 && xmlhttp.status == 200) {
						var resp = JSON.parse(xmlhttp.responseText);
						if (resp.status === 'success') {
							var notificationsToChange = document.getElementById('notifications-button').children;
							for (let notific of notificationsToChange) {
								notific.className = "";
							}
							var counter = Array.from(notificationsButton.children).filter(notificacion => notificacion
								.className == 'btn-info').length;
							notificationsBadge.innerText = counter;
						} else if (resp.status === 'error') {
							flash.innerHTML =
								'<div class="alert alert-danger alert-dismissible">There was an error manipulating your notification. Please try again</div>'
						}
					}
				}
				xmlhttp.send(userID);
				return false;
			}
		</script>
		<%}%>
      </ul>
    </div><!-- /.navbar-collapse -->
  </div><!-- /.container-fluid -->
</nav>

<div class="footerochek">
	<div class="container" id="flash">
		<%if (error && error.length > 0) { %>
		<div class="alert alert-danger alert-dismissible"><%=error%></div>
		<% } %>
		<%if (success && success.length > 0) { %>
		<div class="alert alert-success alert-dismissible"><%=success%></div>
		<% } %>
		</div>
